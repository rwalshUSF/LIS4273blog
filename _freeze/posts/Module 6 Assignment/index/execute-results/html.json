{
  "hash": "81c73a8453fa7c29936dcd0923b72ec5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Module 6 Assignment\"\nauthor: \"Robert Walsh\"\nimage: \"normdist.jpg\"\ndate: \"2025-02-17\"\n---\n\n\n\nRandom Variables & Probability Distributions!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# LIS4273 - Module 6. Assignment\n# Robert Walsh\n# Professor Lingyao Li\n\n# Question A.\n\n# Consider a population consisting of the following values,\n# which represents the number of ice cream purchases during\n# one year for each of the five housemates.\n\n# 8, 14, 16, 10, 11.\nnumPurchases<-c(8,14,16,10,11)\n# A1. Compute the mean of this population.\npopMean<-mean(numPurchases)\n# A2. Select a random sample of size 2 out of the five members.\nrSample<-sample(numPurchases,2)\n# A3. Compute the mean and standard deviation of your sample.\n\n# The Mean of the sample:\nrSampleMean<-mean(rSample)\n\n# The standard deviation of the sample:\nrSampleStdDev<-sd(rSample)\n\n# A4. Compare the Mean and Standard deviation of your sample\n# to the entire population of this set (8,14, 16, 10, 11).\n\n# The standard deviation of the population:\npopStdDev<-sd(numPurchases)\n\ndf<-data.frame(\"Population\"=c(popMean,popStdDev),\n               \"Sample\"=c(rSampleMean,rSampleStdDev),\n               row.names=(c(\"Mean\",\"Std Dev\")))\n# The data frame to compare the Mean and Standard deviation of the sample\n# to the entire population of this set (8,14, 16, 10, 11).\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Population    Sample\nMean     11.800000 15.000000\nStd Dev   3.193744  1.414214\n```\n\n\n:::\n\n```{.r .cell-code}\n# Question B. \n\n# Suppose that the sample size n = 100 and\n# the population proportion p = 0.95.\n\n# B1. Does the sample proportion p have approximately\n# a normal distribution? Explain.\ncat(\"The distribution is considered normal if both :\n      n*p >= 5, and\n      n*q >= 5.\n      n = 100\n      p = 0.95 and \n      q = 0.05.\n      \n      Therefore,\n      n*p = 100*0.95 = 95 >= 5 and\n      n*q = 100*0.05 = 5 >= 5.\n      \n      The sample proportion 'p' will have approximately\n      a normal distribution to be normal with these values.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe distribution is considered normal if both :\n      n*p >= 5, and\n      n*q >= 5.\n      n = 100\n      p = 0.95 and \n      q = 0.05.\n      \n      Therefore,\n      n*p = 100*0.95 = 95 >= 5 and\n      n*q = 100*0.05 = 5 >= 5.\n      \n      The sample proportion 'p' will have approximately\n      a normal distribution to be normal with these values.\n```\n\n\n:::\n\n```{.r .cell-code}\n# B2. What is the smallest value of n for which the\n# sampling distribution of p is approximately normal?\ncat(\"The smallest value of 'n' for which the sampling distribution\n      of 'p' is approximately normal is 100.\n      \n      Any value less than 100, when multiplied with p = 0.95\n      and q = 0.05 will make n*q <= 5,\n      and both n*p and n*q need to be >= 5\n      in order to assume a normal distribution.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe smallest value of 'n' for which the sampling distribution\n      of 'p' is approximately normal is 100.\n      \n      Any value less than 100, when multiplied with p = 0.95\n      and q = 0.05 will make n*q <= 5,\n      and both n*p and n*q need to be >= 5\n      in order to assume a normal distribution.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Question C.\n# From our textbook, Chapter 2 Probability Exercises # 2.4.\n# Simulated coin tossing is probability better done using\n# function called 'rbinom()' than using the function called 'sample()'.\n\n# C1. Please explain the reason why 'rbinom()' is better\n# than 'sample()' in the coin tossing simulation.\ncat(\"The reason why the 'rbinom()' function is better\n      than the 'sample()' function in the coin tossing\n      simulation is that the 'sample()' function would need to\n      create a vector with 'Char' type elements like \\\"H\\\"\n      & \\\"T\\\", then set 'replace=TRUE', & set'prob=c(0.5,0.5)'.\n      That would require extra programming instructions\n      in order to simulate random sampling from that vector.\n      This could affect the outcomes / experiment results. \n      This extra step can be avoided by using 'rbinom()'\n      because it is designed to extract random sample outcomes from\n      the binomial distribution. This makes 'rbinom()' the better\n      choice because it is more efficient and readable as the code \n      clearly indicates that a binomial event, like a coin toss, is \n      being simulated.\"\n      )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe reason why the 'rbinom()' function is better\n      than the 'sample()' function in the coin tossing\n      simulation is that the 'sample()' function would need to\n      create a vector with 'Char' type elements like \"H\"\n      & \"T\", then set 'replace=TRUE', & set'prob=c(0.5,0.5)'.\n      That would require extra programming instructions\n      in order to simulate random sampling from that vector.\n      This could affect the outcomes / experiment results. \n      This extra step can be avoided by using 'rbinom()'\n      because it is designed to extract random sample outcomes from\n      the binomial distribution. This makes 'rbinom()' the better\n      choice because it is more efficient and readable as the code \n      clearly indicates that a binomial event, like a coin toss, is \n      being simulated.\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}